{"mappings":"oeACA,IAAAA,EAAAC,EAAA,S,wCAKA,EAAAC,EAAAC,WAGA,MAAMC,EAAkB,IAAI,EAAAJ,EAAAG,SACtBE,EAAmB,IAAI,EAAAC,EAAAH,SA2H7B,SAASI,EAAaC,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,E,EA3FpCI,eAAkCC,GAChC,IACET,EAAgBU,cAAgB,aAC1BV,EAAgBW,wBAChBX,EAAgBY,kBACtB,IAAIC,QAAuBb,EAAgBc,eAC3Cb,EAAiBc,mBAAqBf,EAAgBgB,aAEtDf,EAAiBgB,wBAA0BJ,EAC3C,IAAIK,QAAoBjB,EAAiBkB,cAAcV,GAEvDW,EAAAC,KAAKC,mBAAmBC,mBAAmB,YAAaL,E,CAGxD,MAAOM,GACPC,QAAQC,IAAIF,E,EA+EhBG,CAAmB,GAtBnBnB,iBACE,IACE,IAAIoB,EAAsBzB,EAAa,UACjCH,EAAgBW,kBACtBV,EAAiBc,mBAAqBf,EAAgBgB,aACtD,IAAIa,QAAyB7B,EAAgB8B,oBACzCC,QAAkCF,EAAiBD,GACvDH,QAAQC,IAAIK,GAEZ,IAAIC,QAA2B/B,EAAiBgC,uBAAuBF,GAGvEX,EAAAC,KAAKa,gBAAgBX,mBAAmB,YAAaS,E,CACrD,MAAOR,GACPC,QAAQC,IAAIF,E,EAUhBW","sources":["src/js/index.js"],"sourcesContent":["//this is class for fetching data\nimport ApiFetchService from './api_fetch_service';\nimport ApiMarkupService from './api_markup_service';\nimport initModals from './modals/init-modals';\nimport { refs } from './constants';\n\ninitModals();\n\n// create instance 'apiFetchService' for using in functions\nconst apiFetchService = new ApiFetchService();\nconst apiMarkupService = new ApiMarkupService();\n\n// test params for fetching data by query\n//--------------//\n// set query by string see example below\n// apiFetchService.setQuery = 'Dungeons & Dragons: Honor Among Thieves';\n// this call return Promise use 'then' to see data;\n// apiFetchService.fetchFilmByQuery();\n// apiFetchService.setCountry = 'US';\n// apiFetchService.setYear = 2021;\n// apiFetchService.setTrendsType = 'week';\n// apiFetchService.fetchFilmTrends();\n\n//function to markup film by search query\nasync function markupFilmByQuery(searchQuery) {\n  try {\n    apiFetchService.setQuery = await searchQuery;\n    await apiFetchService.fetchFilmGenres();\n    await apiFetchService.fetchFilmByQuery();\n    let dataFromQuery = await apiFetchService.getFilmsByQuery;\n    // apiMarkupService.setFilmsForMarkup = '';\n    apiMarkupService.setGenresAll = await apiFetchService.getGenresAll;\n    apiMarkupService.setFilmsForMarkup = await dataFromQuery;\n\n    // let filmMarklUp = await apiMarkupService.markupFilmCard(apiMarkupService.getFilmsForMarkup);\n    let filmMarklUp = await apiMarkupService.markupGallery();\n\n    console.log(filmMarklUp);\n  } catch (error) {\n    console.log(error);\n  }\n}\n// function to markup weekly trends film\nasync function markUpWeeklyTrends(numOfArray) {\n  try {\n    apiFetchService.setTrendsType = 'week';\n    await apiFetchService.fetchFilmGenres();\n    await apiFetchService.fetchFilmTrends();\n    let dataFromTrends = await apiFetchService.getFilmsTrends;\n    apiMarkupService.setGenresAll = await apiFetchService.getGenresAll;\n    // apiMarkupService.setFilmsForMarkup = '';\n    apiMarkupService.setFilmsForMarkup = await dataFromTrends;\n    let filmMarklUp = await apiMarkupService.markupGallery(numOfArray);\n\n    refs.sectioWeeklyTrends.insertAdjacentHTML('beforeend', filmMarklUp);\n\n    // console.log(filmMarklUp);\n  } catch (error) {\n    console.log(error);\n  }\n}\n// function to markup day trends film\nasync function markUpDayTrends(numOfArray) {\n  try {\n    let filmArrayIDtoMarkup = getRandomInt(18);\n    apiFetchService.setTrendsType = 'day';\n    await apiFetchService.fetchFilmGenres();\n    await apiFetchService.fetchFilmTrends();\n    let dataFromTrends = await apiFetchService.getFilmsTrends;\n    apiMarkupService.setGenresAll = await apiFetchService.getGenresAll;\n    // apiMarkupService.setFilmsForMarkup = '';\n    apiMarkupService.setFilmsForMarkup = await dataFromTrends[filmArrayIDtoMarkup];\n    filmDataFormMarkup = apiMarkupService.getFilmsForMarkup;\n    let filmMarklUp = await apiMarkupService.markupFilmHeroTrendsDay(filmDataFormMarkup);\n\n    refs.sectionHeroDayTrends.insertAdjacentHTML('beforeend', filmMarklUp);\n\n    console.log('markUpDayTrends', filmMarklUp);\n  } catch (error) {\n    console.log(error);\n  }\n}\n//function to markup film by ID .Usage for PopUpfilm card\nasync function markupFilmByID(ID) {\n  try {\n    await apiFetchService.fetchFilmGenres();\n    let dataFilmFromID = await apiFetchService.fetchFilmByID(ID);\n    apiMarkupService.setGenresAll = await apiFetchService.getGenresAll;\n    // console.log(dataFilmFromID);\n    // apiMarkupService.setFilmsForMarkup = await dataFilmFromID;\n    let markupFilmByID = await apiMarkupService.markupFilmCardByID(dataFilmFromID);\n    console.log(markupFilmByID);\n  } catch (error) {\n    console.log(error);\n  }\n}\n//function to markup films by array od ID's. like [809,808,766] etc. Usage for my Library\nasync function markupFilmByIDArray(arrayID) {\n  try {\n    await apiFetchService.fetchFilmGenres();\n    apiMarkupService.setGenresAll = await apiFetchService.getGenresAll;\n    apiFetchService.setFilmsIDArray = arrayID;\n    await apiFetchService.fetchFilmByIDArray();\n    apiMarkupService.setFilmsForMarkup = apiFetchService.getFilmsArrayByID;\n    let filmMarklUp = await apiMarkupService.markupGalleryByID();\n    console.log(filmMarklUp);\n\n    refs.sectionGallery.insertAdjacentHTML('beforeend', filmMarklUp);\n\n    // console.log(filmMarklUp);\n  } catch (error) {\n    console.log(error);\n  }\n}\n//function to markup filmUpcoming with randomizer\nasync function markupFilmUpcoming() {\n  try {\n    let filmArrayIDtoMarkup = getRandomInt(18);\n    await apiFetchService.fetchFilmGenres();\n    apiMarkupService.setGenresAll = await apiFetchService.getGenresAll;\n    let dataFilmUpcoming = await apiFetchService.fetchFilmUpcoming();\n    let dataFilmUpcomingForMarkup = await dataFilmUpcoming[filmArrayIDtoMarkup];\n    console.log(dataFilmUpcomingForMarkup);\n\n    let markupFilmUpcoming = await apiMarkupService.markupFilmCardUpcoming(dataFilmUpcomingForMarkup);\n    // console.log(markupFilmUpcoming);\n\n    refs.sectionUpcoming.insertAdjacentHTML('beforeend', markupFilmUpcoming);\n  } catch (error) {\n    console.log(error);\n  }\n}\n//function to get random integer\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n// show weekly trends 3 films\nmarkUpWeeklyTrends(3);\n//render film to Upcoming section\nmarkupFilmUpcoming();\n//show day trends in hero home section\n// markUpDayTrends(1);\n\n//====TESTS=====//\n// markupFilmUpcoming();\n// markupFilmByIDArray([808, 493529]);\n// markupFilmByID(808);\n// markUpWeeklyTrends(3);\n// markupFilmByQuery('Dungeons & Dragons: Honor Among Thieves');\n// markupFilmByQuery('cat');\n// apiFetchService.fetchFilmImagesByID(808);\n// console.log(refs);\n"],"names":["$frGp2","parcelRequire","$9ZD1J","default","$85a5f86b715fe7db$var$apiFetchService","$85a5f86b715fe7db$var$apiMarkupService","$iLP2q","$85a5f86b715fe7db$var$getRandomInt","max","Math","floor","random","async","numOfArray","setTrendsType","fetchFilmGenres","fetchFilmTrends","dataFromTrends","getFilmsTrends","setGenresAll","getGenresAll","setFilmsForMarkup","filmMarklUp","markupGallery","$8G1wF","refs","sectioWeeklyTrends","insertAdjacentHTML","error","console","log","$85a5f86b715fe7db$var$markUpWeeklyTrends","filmArrayIDtoMarkup","dataFilmUpcoming","fetchFilmUpcoming","dataFilmUpcomingForMarkup","markupFilmUpcoming1","markupFilmCardUpcoming","sectionUpcoming","$85a5f86b715fe7db$var$markupFilmUpcoming"],"version":3,"file":"index.94b27972.js.map"}