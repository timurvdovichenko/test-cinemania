{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,S,kEAKA,EAAAC,EAAAC,WAGA,IAAMC,EAAkB,IAAI,EAAAC,EAAAF,SACtBG,EAAmB,IAAI,EAAAC,EAAAJ,S,SAiCdK,I,OAAAA,EAAfC,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAC,EAAkCC,G,IAK1BC,EAIAC,E,kFAPJX,EAAgBY,cAAgB,O,SAC1BZ,EAAgBa,kB,uBAChBb,EAAgBc,kB,uBACKd,EAAgBe,e,cAAvCL,EAAcM,EAAAC,K,UACoBjB,EAAgBkB,a,eAAtDhB,EAAiBiB,aAAYH,EAAAC,K,UAEcP,E,eAA3CR,EAAiBkB,kBAAiBJ,EAAAC,K,UACVf,EAAiBmB,cAAcZ,G,QAAnDE,EAAWK,EAAAC,KAEfK,EAAAC,KAAKC,mBAAmBC,mBAAmB,YAAad,G,kDAIxDe,QAAQC,IAAGX,EAAAY,I,2DAfkBC,MAAAC,KAAAC,U,UAwElBC,I,OAAAA,EAAf3B,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAC,I,IAEQyB,EAGAC,EACAC,EAGAC,E,kFAPAH,EAAsBI,EAAa,I,SACjCrC,EAAgBa,kB,uBACgBb,EAAgBkB,a,cAAtDhB,EAAiBiB,aAAYH,EAAAC,K,SACAjB,EAAgBsC,oB,cAAzCJ,EAAgBlB,EAAAC,K,UACkBiB,EAAiBD,G,eAAnDE,EAAyBnB,EAAAC,KAC7BS,QAAQC,IAAIQ,G,UAEmBjC,EAAiBqC,uBAAuBJ,G,QAAnEC,EAAkBpB,EAAAC,KAGtBK,EAAAC,KAAKiB,gBAAgBf,mBAAmB,YAAaW,G,kDAErDV,QAAQC,IAAGX,EAAAY,I,2DAdkBC,MAAAC,KAAAC,U,CAkBjC,SAASM,EAAaI,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,E,WA3FFhC,GAAnBL,EAAkByB,MAAAC,KAAAC,U,CA8FjCc,CAAmB,G,WAtBJb,EAAkBH,MAAAC,KAAAC,U,CAwBjCe,E","sources":["src/js/index.js"],"sourcesContent":["//this is class for fetching data\nimport ApiFetchService from './api_fetch_service';\nimport ApiMarkupService from './api_markup_service';\nimport initModals from './modals/init-modals';\nimport { refs } from './constants';\n\ninitModals();\n\n// create instance 'apiFetchService' for using in functions\nconst apiFetchService = new ApiFetchService();\nconst apiMarkupService = new ApiMarkupService();\n\n// test params for fetching data by query\n//--------------//\n// set query by string see example below\n// apiFetchService.setQuery = 'Dungeons & Dragons: Honor Among Thieves';\n// this call return Promise use 'then' to see data;\n// apiFetchService.fetchFilmByQuery();\n// apiFetchService.setCountry = 'US';\n// apiFetchService.setYear = 2021;\n// apiFetchService.setTrendsType = 'week';\n// apiFetchService.fetchFilmTrends();\n\n//function to markup film by search query\nasync function markupFilmByQuery(searchQuery) {\n  try {\n    apiFetchService.setQuery = await searchQuery;\n    await apiFetchService.fetchFilmGenres();\n    await apiFetchService.fetchFilmByQuery();\n    let dataFromQuery = await apiFetchService.getFilmsByQuery;\n    // apiMarkupService.setFilmsForMarkup = '';\n    apiMarkupService.setGenresAll = await apiFetchService.getGenresAll;\n    apiMarkupService.setFilmsForMarkup = await dataFromQuery;\n\n    // let filmMarklUp = await apiMarkupService.markupFilmCard(apiMarkupService.getFilmsForMarkup);\n    let filmMarklUp = await apiMarkupService.markupGallery();\n\n    console.log(filmMarklUp);\n  } catch (error) {\n    console.log(error);\n  }\n}\n// function to markup weekly trends film\nasync function markUpWeeklyTrends(numOfArray) {\n  try {\n    apiFetchService.setTrendsType = 'week';\n    await apiFetchService.fetchFilmGenres();\n    await apiFetchService.fetchFilmTrends();\n    let dataFromTrends = await apiFetchService.getFilmsTrends;\n    apiMarkupService.setGenresAll = await apiFetchService.getGenresAll;\n    // apiMarkupService.setFilmsForMarkup = '';\n    apiMarkupService.setFilmsForMarkup = await dataFromTrends;\n    let filmMarklUp = await apiMarkupService.markupGallery(numOfArray);\n\n    refs.sectioWeeklyTrends.insertAdjacentHTML('beforeend', filmMarklUp);\n\n    // console.log(filmMarklUp);\n  } catch (error) {\n    console.log(error);\n  }\n}\n// function to markup day trends film\nasync function markUpDayTrends(numOfArray) {\n  try {\n    let filmArrayIDtoMarkup = getRandomInt(18);\n    apiFetchService.setTrendsType = 'day';\n    await apiFetchService.fetchFilmGenres();\n    await apiFetchService.fetchFilmTrends();\n    let dataFromTrends = await apiFetchService.getFilmsTrends;\n    apiMarkupService.setGenresAll = await apiFetchService.getGenresAll;\n    // apiMarkupService.setFilmsForMarkup = '';\n    apiMarkupService.setFilmsForMarkup = await dataFromTrends[filmArrayIDtoMarkup];\n    filmDataFormMarkup = apiMarkupService.getFilmsForMarkup;\n    let filmMarklUp = await apiMarkupService.markupFilmHeroTrendsDay(filmDataFormMarkup);\n\n    refs.sectionHeroDayTrends.insertAdjacentHTML('beforeend', filmMarklUp);\n\n    console.log('markUpDayTrends', filmMarklUp);\n  } catch (error) {\n    console.log(error);\n  }\n}\n//function to markup film by ID .Usage for PopUpfilm card\nasync function markupFilmByID(ID) {\n  try {\n    await apiFetchService.fetchFilmGenres();\n    let dataFilmFromID = await apiFetchService.fetchFilmByID(ID);\n    apiMarkupService.setGenresAll = await apiFetchService.getGenresAll;\n    // console.log(dataFilmFromID);\n    // apiMarkupService.setFilmsForMarkup = await dataFilmFromID;\n    let markupFilmByID = await apiMarkupService.markupFilmCardByID(dataFilmFromID);\n    console.log(markupFilmByID);\n  } catch (error) {\n    console.log(error);\n  }\n}\n//function to markup films by array od ID's. like [809,808,766] etc. Usage for my Library\nasync function markupFilmByIDArray(arrayID) {\n  try {\n    await apiFetchService.fetchFilmGenres();\n    apiMarkupService.setGenresAll = await apiFetchService.getGenresAll;\n    apiFetchService.setFilmsIDArray = arrayID;\n    await apiFetchService.fetchFilmByIDArray();\n    apiMarkupService.setFilmsForMarkup = apiFetchService.getFilmsArrayByID;\n    let filmMarklUp = await apiMarkupService.markupGalleryByID();\n    console.log(filmMarklUp);\n\n    refs.sectionGallery.insertAdjacentHTML('beforeend', filmMarklUp);\n\n    // console.log(filmMarklUp);\n  } catch (error) {\n    console.log(error);\n  }\n}\n//function to markup filmUpcoming with randomizer\nasync function markupFilmUpcoming() {\n  try {\n    let filmArrayIDtoMarkup = getRandomInt(18);\n    await apiFetchService.fetchFilmGenres();\n    apiMarkupService.setGenresAll = await apiFetchService.getGenresAll;\n    let dataFilmUpcoming = await apiFetchService.fetchFilmUpcoming();\n    let dataFilmUpcomingForMarkup = await dataFilmUpcoming[filmArrayIDtoMarkup];\n    console.log(dataFilmUpcomingForMarkup);\n\n    let markupFilmUpcoming = await apiMarkupService.markupFilmCardUpcoming(dataFilmUpcomingForMarkup);\n    // console.log(markupFilmUpcoming);\n\n    refs.sectionUpcoming.insertAdjacentHTML('beforeend', markupFilmUpcoming);\n  } catch (error) {\n    console.log(error);\n  }\n}\n//function to get random integer\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n// show weekly trends 3 films\nmarkUpWeeklyTrends(3);\n//render film to Upcoming section\nmarkupFilmUpcoming();\n//show day trends in hero home section\n// markUpDayTrends(1);\n\n//====TESTS=====//\n// markupFilmUpcoming();\n// markupFilmByIDArray([808, 493529]);\n// markupFilmByID(808);\n// markUpWeeklyTrends(3);\n// markupFilmByQuery('Dungeons & Dragons: Honor Among Thieves');\n// markupFilmByQuery('cat');\n// apiFetchService.fetchFilmImagesByID(808);\n// console.log(refs);\n"],"names":["$bpxeT","parcelRequire","$l5BVm","default","$44ae6d9db4eaca0f$var$apiFetchService","$73acq","$44ae6d9db4eaca0f$var$apiMarkupService","$fGPKd","$44ae6d9db4eaca0f$var$_markUpWeeklyTrends","$parcel$interopDefault","$2TvXO","mark","_callee","numOfArray","dataFromTrends","filmMarklUp","setTrendsType","fetchFilmGenres","fetchFilmTrends","getFilmsTrends","_ctx","sent","getGenresAll","setGenresAll","setFilmsForMarkup","markupGallery","$4s6iC","refs","sectioWeeklyTrends","insertAdjacentHTML","console","log","t0","apply","this","arguments","$44ae6d9db4eaca0f$var$_markupFilmUpcoming","filmArrayIDtoMarkup","dataFilmUpcoming","dataFilmUpcomingForMarkup","_$markupFilmUpcoming","$44ae6d9db4eaca0f$var$getRandomInt","fetchFilmUpcoming","markupFilmCardUpcoming","sectionUpcoming","max","Math","floor","random","$44ae6d9db4eaca0f$var$markUpWeeklyTrends","$44ae6d9db4eaca0f$var$markupFilmUpcoming"],"version":3,"file":"index.51cedbe4.js.map"}